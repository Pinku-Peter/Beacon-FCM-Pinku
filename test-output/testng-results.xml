<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-23T19:19:31 IST" name="Default suite" finished-at="2025-01-23T19:21:23 IST" duration-ms="111415">
    <groups>
    </groups>
    <test started-at="2025-01-23T19:19:31 IST" name="Default test" finished-at="2025-01-23T19:21:23 IST" duration-ms="111415">
      <class name="com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule">
        <test-method is-config="true" signature="SetUp()[pri:0, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:19:31 IST" name="SetUp" finished-at="2025-01-23T19:19:31 IST" duration-ms="626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:19:31 IST" name="setupTest" finished-at="2025-01-23T19:19:31 IST" duration-ms="98" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule.Login_and_Navigation_to_Manual_Allocation_Core_Application() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Login_and_Navigation_to_Manual_Allocation_Core_Application()[pri:21, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:19:31 IST" name="Login_and_Navigation_to_Manual_Allocation_Core_Application" finished-at="2025-01-23T19:21:03 IST" duration-ms="92107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login_and_Navigation_to_Manual_Allocation_Core_Application -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:21:03 IST" name="takeScreenshotOnFailure" finished-at="2025-01-23T19:21:03 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login_and_Navigation_to_Manual_Allocation_Core_Application status=SUCCESS method=AllScenarios_CoreManualAllocationModule.Login_and_Navigation_to_Manual_Allocation_Core_Application()[pri:21, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:21:03 IST" name="setupTest" finished-at="2025-01-23T19:21:03 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule.testMandatoryFieldValidations() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="testMandatoryFieldValidations()[pri:22, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:21:03 IST" name="testMandatoryFieldValidations" finished-at="2025-01-23T19:21:10 IST" duration-ms="6307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMandatoryFieldValidations -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:21:10 IST" name="takeScreenshotOnFailure" finished-at="2025-01-23T19:21:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMandatoryFieldValidations status=SUCCESS method=AllScenarios_CoreManualAllocationModule.testMandatoryFieldValidations()[pri:22, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:21:10 IST" name="setupTest" finished-at="2025-01-23T19:21:10 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule.testAssetCategorySelections() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="testAssetCategorySelections()[pri:23, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:21:10 IST" name="testAssetCategorySelections" finished-at="2025-01-23T19:21:21 IST" duration-ms="10925" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAssetCategorySelections -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:21:21 IST" name="takeScreenshotOnFailure" finished-at="2025-01-23T19:21:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAssetCategorySelections status=SUCCESS method=AllScenarios_CoreManualAllocationModule.testAssetCategorySelections()[pri:23, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:21:21 IST" name="setupTest" finished-at="2025-01-23T19:21:21 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule.testSmaCategoryDropdownSelections() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="testSmaCategoryDropdownSelections()[pri:24, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:21:21 IST" name="testSmaCategoryDropdownSelections" finished-at="2025-01-23T19:21:22 IST" duration-ms="1248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSmaCategoryDropdownSelections -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:21:22 IST" name="takeScreenshotOnFailure" finished-at="2025-01-23T19:21:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSmaCategoryDropdownSelections status=SUCCESS method=AllScenarios_CoreManualAllocationModule.testSmaCategoryDropdownSelections()[pri:24, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:21:22 IST" name="setupTest" finished-at="2025-01-23T19:21:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule.testNpaCategoryDropdownSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="testNpaCategoryDropdownSelection()[pri:25, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:21:22 IST" name="testNpaCategoryDropdownSelection" finished-at="2025-01-23T19:21:23 IST" duration-ms="665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNpaCategoryDropdownSelection -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:21:23 IST" name="takeScreenshotOnFailure" finished-at="2025-01-23T19:21:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNpaCategoryDropdownSelection status=SUCCESS method=AllScenarios_CoreManualAllocationModule.testNpaCategoryDropdownSelection()[pri:25, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="afterEachTest()[pri:0, instance:com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule@367ffa75]" started-at="2025-01-23T19:21:23 IST" name="afterEachTest" finished-at="2025-01-23T19:21:23 IST" duration-ms="295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
      </class> <!-- com.test.CoreManualAllocation_Module.AllScenarios_CoreManualAllocationModule -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
