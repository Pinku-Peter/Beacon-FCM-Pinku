<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="17" passed="17" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-11T12:55:45 IST" name="Default suite" finished-at="2025-03-11T13:02:14 IST" duration-ms="388288">
    <groups>
    </groups>
    <test started-at="2025-03-11T12:55:45 IST" name="Default test" finished-at="2025-03-11T13:02:14 IST" duration-ms="388288">
      <class name="collectionAgency.Disposition.CollectionAgencyDisposition_TestClass">
        <test-method is-config="true" signature="SetUp()[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:55:45 IST" name="SetUp" finished-at="2025-03-11T12:57:22 IST" duration-ms="96807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:57:22 IST" name="setupTest" finished-at="2025-03-11T12:57:22 IST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Login_to_core_application_and_navigate_to_agency_account_agency_menu() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Login_to_core_application_and_navigate_to_agency_account_agency_menu()[pri:1, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:57:22 IST" name="Login_to_core_application_and_navigate_to_agency_account_agency_menu" finished-at="2025-03-11T12:57:46 IST" duration-ms="23533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login_to_core_application_and_navigate_to_agency_account_agency_menu -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:57:46 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T12:57:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login_to_core_application_and_navigate_to_agency_account_agency_menu status=SUCCESS method=CollectionAgencyDisposition_TestClass.Login_to_core_application_and_navigate_to_agency_account_agency_menu()[pri:1, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:57:46 IST" name="setupTest" finished-at="2025-03-11T12:57:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Truncate_mst_col_agency_acc_allocated_and_delete_data_from_trn_account_followup_where_disposition_date__today() throws java.lang.ClassNotFoundException,java.io.IOException,java.sql.SQLException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Truncate_mst_col_agency_acc_allocated_and_delete_data_from_trn_account_followup_where_disposition_date__today()[pri:2, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:57:46 IST" name="Truncate_mst_col_agency_acc_allocated_and_delete_data_from_trn_account_followup_where_disposition_date__today" finished-at="2025-03-11T12:57:50 IST" duration-ms="4404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Truncate_mst_col_agency_acc_allocated_and_delete_data_from_trn_account_followup_where_disposition_date__today -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:57:50 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T12:57:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Truncate_mst_col_agency_acc_allocated_and_delete_data_from_trn_account_followup_where_disposition_date__today status=SUCCESS method=CollectionAgencyDisposition_TestClass.Truncate_mst_col_agency_acc_allocated_and_delete_data_from_trn_account_followup_where_disposition_date__today()[pri:2, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:57:51 IST" name="setupTest" finished-at="2025-03-11T12:57:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Allocating_accounts_to_collection_agency(java.util.Map) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Allocating_accounts_to_collection_agency(java.util.Map)[pri:3, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:57:51 IST" name="Allocating_accounts_to_collection_agency" data-provider="TestData" finished-at="2025-03-11T12:59:05 IST" duration-ms="73531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AccountType=Not Allocated, AllocateTo=Call Centre, CommittedAmount=1000000000, Disposition=Meeting, DPDDays=10, DPDDaysOperator==, NextActionDate=21, NextActionOwner=Collection Agency, NPACategory=SUB-STANDARD, OutstandingBalance=25000, OutstandingBalanceOperator==, Region=Mumbai I, Remarks=test, Run=Yes, SelectCallCentre=CallCentre 1, SMACategory=SMA 0 (01-30 Days), SubDisposition=Not able to pay, TestScenario=CollectionAgencyDispositionPage, To=Call Centre}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Allocating_accounts_to_collection_agency -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:59:05 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T12:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Allocating_accounts_to_collection_agency status=SUCCESS method=CollectionAgencyDisposition_TestClass.Allocating_accounts_to_collection_agency(java.util.Map)[pri:3, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:59:05 IST" name="setupTest" finished-at="2025-03-11T12:59:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Fetch_a_not_allocated_account_number_in_selected_collection_agency() throws java.io.IOException,java.lang.InterruptedException,java.lang.ClassNotFoundException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Fetch_a_not_allocated_account_number_in_selected_collection_agency()[pri:4, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:59:05 IST" name="Fetch_a_not_allocated_account_number_in_selected_collection_agency" finished-at="2025-03-11T12:59:09 IST" duration-ms="3887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Fetch_a_not_allocated_account_number_in_selected_collection_agency -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:59:09 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T12:59:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Fetch_a_not_allocated_account_number_in_selected_collection_agency status=SUCCESS method=CollectionAgencyDisposition_TestClass.Fetch_a_not_allocated_account_number_in_selected_collection_agency()[pri:4, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:59:09 IST" name="setupTest" finished-at="2025-03-11T12:59:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Login_to_allocated_collection_agency_from_collection_agency_application() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Login_to_allocated_collection_agency_from_collection_agency_application()[pri:5, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T12:59:09 IST" name="Login_to_allocated_collection_agency_from_collection_agency_application" finished-at="2025-03-11T13:00:11 IST" duration-ms="62546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login_to_allocated_collection_agency_from_collection_agency_application -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:11 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T13:00:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login_to_allocated_collection_agency_from_collection_agency_application status=SUCCESS method=CollectionAgencyDisposition_TestClass.Login_to_allocated_collection_agency_from_collection_agency_application()[pri:5, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:11 IST" name="setupTest" finished-at="2025-03-11T13:00:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Doing_Disposition_against_Agency_allocated_accounts() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Doing_Disposition_against_Agency_allocated_accounts()[pri:6, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:11 IST" name="Doing_Disposition_against_Agency_allocated_accounts" finished-at="2025-03-11T13:00:40 IST" duration-ms="28880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Doing_Disposition_against_Agency_allocated_accounts -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:40 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T13:00:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Doing_Disposition_against_Agency_allocated_accounts status=SUCCESS method=CollectionAgencyDisposition_TestClass.Doing_Disposition_against_Agency_allocated_accounts()[pri:6, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:40 IST" name="setupTest" finished-at="2025-03-11T13:00:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Customer_Details_Grid_Data_Integrity() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Customer_Details_Grid_Data_Integrity()[pri:7, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:40 IST" name="Customer_Details_Grid_Data_Integrity" finished-at="2025-03-11T13:00:43 IST" duration-ms="3236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Customer_Details_Grid_Data_Integrity -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:43 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T13:00:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Customer_Details_Grid_Data_Integrity status=SUCCESS method=CollectionAgencyDisposition_TestClass.Customer_Details_Grid_Data_Integrity()[pri:7, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:43 IST" name="setupTest" finished-at="2025-03-11T13:00:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Risk_Column_Data_Consistency() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Risk_Column_Data_Consistency()[pri:8, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:43 IST" name="Risk_Column_Data_Consistency" finished-at="2025-03-11T13:00:46 IST" duration-ms="3044" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Risk_Column_Data_Consistency -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:46 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T13:00:46 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Risk_Column_Data_Consistency status=SUCCESS method=CollectionAgencyDisposition_TestClass.Risk_Column_Data_Consistency()[pri:8, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:46 IST" name="setupTest" finished-at="2025-03-11T13:00:46 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Security_Details_View_Open_Grid() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Security_Details_View_Open_Grid()[pri:9, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:46 IST" name="Security_Details_View_Open_Grid" finished-at="2025-03-11T13:00:55 IST" duration-ms="8894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Security_Details_View_Open_Grid -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:55 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T13:00:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Security_Details_View_Open_Grid status=SUCCESS method=CollectionAgencyDisposition_TestClass.Security_Details_View_Open_Grid()[pri:9, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method signature="Next_Action_Owner_Dropdown_Selection(java.util.Map)[pri:10, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:55 IST" name="Next_Action_Owner_Dropdown_Selection" data-provider="TestData" finished-at="2025-03-11T13:00:59 IST" duration-ms="3356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AccountType=Not Allocated, AllocateTo=Call Centre, CommittedAmount=1000000000, Disposition=Meeting, DPDDays=10, DPDDaysOperator==, NextActionDate=21, NextActionOwner=Collection Agency, NPACategory=SUB-STANDARD, OutstandingBalance=25000, OutstandingBalanceOperator==, Region=Mumbai I, Remarks=test, Run=Yes, SelectCallCentre=CallCentre 1, SMACategory=SMA 0 (01-30 Days), SubDisposition=Not able to pay, TestScenario=CollectionAgencyDispositionPage, To=Call Centre}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Next_Action_Owner_Dropdown_Selection -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:55 IST" name="setupTest" finished-at="2025-03-11T13:00:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Next_Action_Owner_Dropdown_Selection(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:59 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T13:00:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Next_Action_Owner_Dropdown_Selection status=SUCCESS method=CollectionAgencyDisposition_TestClass.Next_Action_Owner_Dropdown_Selection(java.util.Map)[pri:10, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:59 IST" name="setupTest" finished-at="2025-03-11T13:00:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Cancel_Button_Functionality_in_Add_New_Interaction_Details(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Cancel_Button_Functionality_in_Add_New_Interaction_Details(java.util.Map)[pri:11, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:00:59 IST" name="Cancel_Button_Functionality_in_Add_New_Interaction_Details" data-provider="TestData" finished-at="2025-03-11T13:01:09 IST" duration-ms="9812" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AccountType=Not Allocated, AllocateTo=Call Centre, CommittedAmount=1000000000, Disposition=Meeting, DPDDays=10, DPDDaysOperator==, NextActionDate=21, NextActionOwner=Collection Agency, NPACategory=SUB-STANDARD, OutstandingBalance=25000, OutstandingBalanceOperator==, Region=Mumbai I, Remarks=test, Run=Yes, SelectCallCentre=CallCentre 1, SMACategory=SMA 0 (01-30 Days), SubDisposition=Not able to pay, TestScenario=CollectionAgencyDispositionPage, To=Call Centre}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Cancel_Button_Functionality_in_Add_New_Interaction_Details -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:09 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T13:01:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Cancel_Button_Functionality_in_Add_New_Interaction_Details status=SUCCESS method=CollectionAgencyDisposition_TestClass.Cancel_Button_Functionality_in_Add_New_Interaction_Details(java.util.Map)[pri:11, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method signature="Error_Guessing_Empty_Remarks_Field(java.util.Map)[pri:12, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:09 IST" name="Error_Guessing_Empty_Remarks_Field" data-provider="TestData" finished-at="2025-03-11T13:01:23 IST" duration-ms="14594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AccountType=Not Allocated, AllocateTo=Call Centre, CommittedAmount=1000000000, Disposition=Meeting, DPDDays=10, DPDDaysOperator==, NextActionDate=21, NextActionOwner=Collection Agency, NPACategory=SUB-STANDARD, OutstandingBalance=25000, OutstandingBalanceOperator==, Region=Mumbai I, Remarks=test, Run=Yes, SelectCallCentre=CallCentre 1, SMACategory=SMA 0 (01-30 Days), SubDisposition=Not able to pay, TestScenario=CollectionAgencyDispositionPage, To=Call Centre}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Error_Guessing_Empty_Remarks_Field -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:09 IST" name="setupTest" finished-at="2025-03-11T13:01:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Error_Guessing_Empty_Remarks_Field(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:23 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T13:01:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Error_Guessing_Empty_Remarks_Field status=SUCCESS method=CollectionAgencyDisposition_TestClass.Error_Guessing_Empty_Remarks_Field(java.util.Map)[pri:12, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method signature="Committed_Amount_Field_BVA_Validations(java.util.Map)[pri:13, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:23 IST" name="Committed_Amount_Field_BVA_Validations" data-provider="TestData" finished-at="2025-03-11T13:01:28 IST" duration-ms="4777" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AccountType=Not Allocated, AllocateTo=Call Centre, CommittedAmount=1000000000, Disposition=Meeting, DPDDays=10, DPDDaysOperator==, NextActionDate=21, NextActionOwner=Collection Agency, NPACategory=SUB-STANDARD, OutstandingBalance=25000, OutstandingBalanceOperator==, Region=Mumbai I, Remarks=test, Run=Yes, SelectCallCentre=CallCentre 1, SMACategory=SMA 0 (01-30 Days), SubDisposition=Not able to pay, TestScenario=CollectionAgencyDispositionPage, To=Call Centre}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Committed_Amount_Field_BVA_Validations -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:23 IST" name="setupTest" finished-at="2025-03-11T13:01:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Committed_Amount_Field_BVA_Validations(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:28 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T13:01:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Committed_Amount_Field_BVA_Validations status=SUCCESS method=CollectionAgencyDisposition_TestClass.Committed_Amount_Field_BVA_Validations(java.util.Map)[pri:13, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method signature="Customer_Details_Data_Accuracy()[pri:14, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:28 IST" name="Customer_Details_Data_Accuracy" finished-at="2025-03-11T13:01:37 IST" duration-ms="8388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Customer_Details_Data_Accuracy -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:28 IST" name="setupTest" finished-at="2025-03-11T13:01:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Customer_Details_Data_Accuracy() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:37 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T13:01:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Customer_Details_Data_Accuracy status=SUCCESS method=CollectionAgencyDisposition_TestClass.Customer_Details_Data_Accuracy()[pri:14, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:37 IST" name="setupTest" finished-at="2025-03-11T13:01:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Other_Account_Details_Grid_Validation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Other_Account_Details_Grid_Validation()[pri:15, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:37 IST" name="Other_Account_Details_Grid_Validation" finished-at="2025-03-11T13:01:45 IST" duration-ms="8234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Other_Account_Details_Grid_Validation -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:45 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T13:01:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Other_Account_Details_Grid_Validation status=SUCCESS method=CollectionAgencyDisposition_TestClass.Other_Account_Details_Grid_Validation()[pri:15, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method signature="Disposition_and_Sub_Disposition_Valid_Selections(java.util.Map)[pri:16, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:45 IST" name="Disposition_and_Sub_Disposition_Valid_Selections" data-provider="TestData" finished-at="2025-03-11T13:02:00 IST" duration-ms="15532" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AccountType=Not Allocated, AllocateTo=Call Centre, CommittedAmount=1000000000, Disposition=Meeting, DPDDays=10, DPDDaysOperator==, NextActionDate=21, NextActionOwner=Collection Agency, NPACategory=SUB-STANDARD, OutstandingBalance=25000, OutstandingBalanceOperator==, Region=Mumbai I, Remarks=test, Run=Yes, SelectCallCentre=CallCentre 1, SMACategory=SMA 0 (01-30 Days), SubDisposition=Not able to pay, TestScenario=CollectionAgencyDispositionPage, To=Call Centre}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Disposition_and_Sub_Disposition_Valid_Selections -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:01:45 IST" name="setupTest" finished-at="2025-03-11T13:01:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Disposition_and_Sub_Disposition_Valid_Selections(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:02:00 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T13:02:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Disposition_and_Sub_Disposition_Valid_Selections status=SUCCESS method=CollectionAgencyDisposition_TestClass.Disposition_and_Sub_Disposition_Valid_Selections(java.util.Map)[pri:16, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method signature="Search_Functionality_Invalid_Input()[pri:17, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:02:00 IST" name="Search_Functionality_Invalid_Input" finished-at="2025-03-11T13:02:14 IST" duration-ms="13175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_Functionality_Invalid_Input -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:02:00 IST" name="setupTest" finished-at="2025-03-11T13:02:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void collectionAgency.Disposition.CollectionAgencyDisposition_TestClass.Search_Functionality_Invalid_Input() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:02:14 IST" name="takeScreenshotOnFailure" finished-at="2025-03-11T13:02:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Search_Functionality_Invalid_Input status=SUCCESS method=CollectionAgencyDisposition_TestClass.Search_Functionality_Invalid_Input()[pri:17, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="afterEachTest()[pri:0, instance:collectionAgency.Disposition.CollectionAgencyDisposition_TestClass@3a52dba3]" started-at="2025-03-11T13:02:14 IST" name="afterEachTest" finished-at="2025-03-11T13:02:15 IST" duration-ms="1423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
      </class> <!-- collectionAgency.Disposition.CollectionAgencyDisposition_TestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
