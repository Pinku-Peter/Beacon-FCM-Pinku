<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="9" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-21T11:06:25 IST" name="Default suite" finished-at="2025-04-21T11:20:16 IST" duration-ms="830824">
    <groups>
    </groups>
    <test started-at="2025-04-21T11:06:25 IST" name="Default test" finished-at="2025-04-21T11:20:16 IST" duration-ms="830824">
      <class name="core.SummaryReports.BankAllocationSummary_TestClass">
        <test-method is-config="true" signature="SetUp()[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:06:25 IST" name="SetUp" finished-at="2025-04-21T11:06:25 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:06:27 IST" name="setupTest" finished-at="2025-04-21T11:06:27 IST" duration-ms="105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.SummaryReports.BankAllocationSummary_TestClass.Verify_zone_user_able_to_allocate_accounts_to_branch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_zone_user_able_to_allocate_accounts_to_branch(java.util.Map)[pri:1, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:06:27 IST" name="Verify_zone_user_able_to_allocate_accounts_to_branch" data-provider="TestData" finished-at="2025-04-21T11:11:45 IST" duration-ms="317773" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocateTo=Branch, AssetCategory=SMA Category, Branch=Amaravati, OsBalanceAmount=10000, OsBalanceOperator=<, Region=Mumbai I, Run=Yes, SMACategory=SMA 0 (01-30 Days), TestScenario=CoreBankAllocationSummary}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_zone_user_able_to_allocate_accounts_to_branch -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:11:45 IST" name="takeScreenshotOnFailure" finished-at="2025-04-21T11:11:45 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_zone_user_able_to_allocate_accounts_to_branch status=SUCCESS method=BankAllocationSummary_TestClass.Verify_zone_user_able_to_allocate_accounts_to_branch(java.util.Map)[pri:1, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:11:45 IST" name="setupTest" finished-at="2025-04-21T11:11:45 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.SummaryReports.BankAllocationSummary_TestClass.Verify_branch_user_able_to_Login_with_Valid_Credentials() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_branch_user_able_to_Login_with_Valid_Credentials()[pri:2, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:11:45 IST" name="Verify_branch_user_able_to_Login_with_Valid_Credentials" finished-at="2025-04-21T11:14:05 IST" duration-ms="140005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_branch_user_able_to_Login_with_Valid_Credentials -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:14:05 IST" name="takeScreenshotOnFailure" finished-at="2025-04-21T11:14:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_branch_user_able_to_Login_with_Valid_Credentials status=SUCCESS method=BankAllocationSummary_TestClass.Verify_branch_user_able_to_Login_with_Valid_Credentials()[pri:2, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:14:05 IST" name="setupTest" finished-at="2025-04-21T11:14:05 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.SummaryReports.BankAllocationSummary_TestClass.Successful_Account_Allocation_to_My_accounts_in_my_desk() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Successful_Account_Allocation_to_My_accounts_in_my_desk()[pri:3, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:14:05 IST" name="Successful_Account_Allocation_to_My_accounts_in_my_desk" finished-at="2025-04-21T11:15:35 IST" duration-ms="89926" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Successful_Account_Allocation_to_My_accounts_in_my_desk -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:15:35 IST" name="takeScreenshotOnFailure" finished-at="2025-04-21T11:15:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Successful_Account_Allocation_to_My_accounts_in_my_desk status=SUCCESS method=BankAllocationSummary_TestClass.Successful_Account_Allocation_to_My_accounts_in_my_desk()[pri:3, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:15:35 IST" name="setupTest" finished-at="2025-04-21T11:15:35 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.SummaryReports.BankAllocationSummary_TestClass.Validate_Data_Execution_for_Bank_Allocation_Summary_in_database() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Validate_Data_Execution_for_Bank_Allocation_Summary_in_database()[pri:4, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:15:35 IST" name="Validate_Data_Execution_for_Bank_Allocation_Summary_in_database" finished-at="2025-04-21T11:15:38 IST" duration-ms="3650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Validate_Data_Execution_for_Bank_Allocation_Summary_in_database -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:15:38 IST" name="takeScreenshotOnFailure" finished-at="2025-04-21T11:15:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Validate_Data_Execution_for_Bank_Allocation_Summary_in_database status=SUCCESS method=BankAllocationSummary_TestClass.Validate_Data_Execution_for_Bank_Allocation_Summary_in_database()[pri:4, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:15:39 IST" name="setupTest" finished-at="2025-04-21T11:15:39 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.SummaryReports.BankAllocationSummary_TestClass.Verify_Accounts_in_Todays_Branch_Allocation_Summary(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Accounts_in_Todays_Branch_Allocation_Summary(java.util.Map)[pri:5, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:15:39 IST" name="Verify_Accounts_in_Todays_Branch_Allocation_Summary" data-provider="TestData" finished-at="2025-04-21T11:19:40 IST" duration-ms="241093" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocateTo=Branch, AssetCategory=SMA Category, Branch=Amaravati, OsBalanceAmount=10000, OsBalanceOperator=<, Region=Mumbai I, Run=Yes, SMACategory=SMA 0 (01-30 Days), TestScenario=CoreBankAllocationSummary}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Accounts_in_Todays_Branch_Allocation_Summary -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:19:40 IST" name="takeScreenshotOnFailure" finished-at="2025-04-21T11:19:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Accounts_in_Todays_Branch_Allocation_Summary status=SUCCESS method=BankAllocationSummary_TestClass.Verify_Accounts_in_Todays_Branch_Allocation_Summary(java.util.Map)[pri:5, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:19:40 IST" name="setupTest" finished-at="2025-04-21T11:19:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.SummaryReports.BankAllocationSummary_TestClass.Verify_Accounts_in_Yesterdays_date(java.util.Map) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Accounts_in_Yesterdays_date(java.util.Map)[pri:6, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:19:40 IST" name="Verify_Accounts_in_Yesterdays_date" data-provider="TestData" finished-at="2025-04-21T11:19:44 IST" duration-ms="4237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocateTo=Branch, AssetCategory=SMA Category, Branch=Amaravati, OsBalanceAmount=10000, OsBalanceOperator=<, Region=Mumbai I, Run=Yes, SMACategory=SMA 0 (01-30 Days), TestScenario=CoreBankAllocationSummary}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Accounts_in_Yesterdays_date -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:19:44 IST" name="takeScreenshotOnFailure" finished-at="2025-04-21T11:19:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Accounts_in_Yesterdays_date status=SUCCESS method=BankAllocationSummary_TestClass.Verify_Accounts_in_Yesterdays_date(java.util.Map)[pri:6, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:19:44 IST" name="setupTest" finished-at="2025-04-21T11:19:44 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.SummaryReports.BankAllocationSummary_TestClass.Verify_the_tables_DW_BRANCH_ALLOCATIONS_SUMMARY_and_DW_BRANCH_ALLOCATIONS_DASHBOARD_are_updated_after_the_package_execution() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_the_tables_DW_BRANCH_ALLOCATIONS_SUMMARY_and_DW_BRANCH_ALLOCATIONS_DASHBOARD_are_updated_after_the_package_execution()[pri:7, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:19:44 IST" name="Verify_the_tables_DW_BRANCH_ALLOCATIONS_SUMMARY_and_DW_BRANCH_ALLOCATIONS_DASHBOARD_are_updated_after_the_package_execution" finished-at="2025-04-21T11:19:48 IST" duration-ms="3630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_tables_DW_BRANCH_ALLOCATIONS_SUMMARY_and_DW_BRANCH_ALLOCATIONS_DASHBOARD_are_updated_after_the_package_execution -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:19:48 IST" name="takeScreenshotOnFailure" finished-at="2025-04-21T11:19:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_tables_DW_BRANCH_ALLOCATIONS_SUMMARY_and_DW_BRANCH_ALLOCATIONS_DASHBOARD_are_updated_after_the_package_execution status=SUCCESS method=BankAllocationSummary_TestClass.Verify_the_tables_DW_BRANCH_ALLOCATIONS_SUMMARY_and_DW_BRANCH_ALLOCATIONS_DASHBOARD_are_updated_after_the_package_execution()[pri:7, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:19:48 IST" name="setupTest" finished-at="2025-04-21T11:19:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.SummaryReports.BankAllocationSummary_TestClass.Verify_Grid_Details_Accuracy(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Grid_Details_Accuracy(java.util.Map)[pri:8, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:19:48 IST" name="Verify_Grid_Details_Accuracy" data-provider="TestData" finished-at="2025-04-21T11:20:01 IST" duration-ms="12604" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocateTo=Branch, AssetCategory=SMA Category, Branch=Amaravati, OsBalanceAmount=10000, OsBalanceOperator=<, Region=Mumbai I, Run=Yes, SMACategory=SMA 0 (01-30 Days), TestScenario=CoreBankAllocationSummary}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Grid_Details_Accuracy -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:20:01 IST" name="takeScreenshotOnFailure" finished-at="2025-04-21T11:20:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Grid_Details_Accuracy status=SUCCESS method=BankAllocationSummary_TestClass.Verify_Grid_Details_Accuracy(java.util.Map)[pri:8, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:20:01 IST" name="setupTest" finished-at="2025-04-21T11:20:01 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.SummaryReports.BankAllocationSummary_TestClass.Verify_Download_Functionality_as_Excel() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Download_Functionality_as_Excel()[pri:9, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:20:01 IST" name="Verify_Download_Functionality_as_Excel" finished-at="2025-04-21T11:20:14 IST" duration-ms="13541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Download_Functionality_as_Excel -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:20:14 IST" name="takeScreenshotOnFailure" finished-at="2025-04-21T11:20:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Download_Functionality_as_Excel status=SUCCESS method=BankAllocationSummary_TestClass.Verify_Download_Functionality_as_Excel()[pri:9, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="afterEachTest()[pri:0, instance:core.SummaryReports.BankAllocationSummary_TestClass@1ce24091]" started-at="2025-04-21T11:20:14 IST" name="afterEachTest" finished-at="2025-04-21T11:20:16 IST" duration-ms="2147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
      </class> <!-- core.SummaryReports.BankAllocationSummary_TestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
