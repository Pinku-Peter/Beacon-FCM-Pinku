<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="15" passed="15" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-11T17:20:55 IST" name="Default suite" finished-at="2025-04-11T17:25:03 IST" duration-ms="247665">
    <groups>
    </groups>
    <test started-at="2025-04-11T17:20:55 IST" name="Default test" finished-at="2025-04-11T17:25:03 IST" duration-ms="247665">
      <class name="core.AlertsandNotifications.AlertsTemplateManagement_TestClass">
        <test-method is-config="true" signature="SetUp()[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:20:56 IST" name="SetUp" finished-at="2025-04-11T17:20:56 IST" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:20:56 IST" name="setupTest" finished-at="2025-04-11T17:20:57 IST" duration-ms="1231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.Test_Login_with_Valid_Credentials() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Test_Login_with_Valid_Credentials()[pri:1, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:20:57 IST" name="Test_Login_with_Valid_Credentials" finished-at="2025-04-11T17:22:34 IST" duration-ms="97349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Login_with_Valid_Credentials -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:22:34 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:22:34 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Login_with_Valid_Credentials status=SUCCESS method=AlertsTemplateManagement_TestClass.Test_Login_with_Valid_Credentials()[pri:1, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:22:34 IST" name="setupTest" finished-at="2025-04-11T17:22:34 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.Display_Alerts_and_Notifications_Menu_Option() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Display_Alerts_and_Notifications_Menu_Option()[pri:2, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:22:34 IST" name="Display_Alerts_and_Notifications_Menu_Option" finished-at="2025-04-11T17:22:42 IST" duration-ms="8099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Display_Alerts_and_Notifications_Menu_Option -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:22:42 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:22:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Display_Alerts_and_Notifications_Menu_Option status=SUCCESS method=AlertsTemplateManagement_TestClass.Display_Alerts_and_Notifications_Menu_Option()[pri:2, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:22:42 IST" name="setupTest" finished-at="2025-04-11T17:22:42 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.Access_Alerts_and_Notifications_Page() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Access_Alerts_and_Notifications_Page()[pri:3, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:22:42 IST" name="Access_Alerts_and_Notifications_Page" finished-at="2025-04-11T17:22:45 IST" duration-ms="3191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Access_Alerts_and_Notifications_Page -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:22:46 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:22:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Access_Alerts_and_Notifications_Page status=SUCCESS method=AlertsTemplateManagement_TestClass.Access_Alerts_and_Notifications_Page()[pri:3, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:22:46 IST" name="setupTest" finished-at="2025-04-11T17:22:46 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.Navigate_to_Template_Management() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Navigate_to_Template_Management()[pri:4, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:22:46 IST" name="Navigate_to_Template_Management" finished-at="2025-04-11T17:23:02 IST" duration-ms="16926" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Navigate_to_Template_Management -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:02 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:23:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Navigate_to_Template_Management status=SUCCESS method=AlertsTemplateManagement_TestClass.Navigate_to_Template_Management()[pri:4, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:03 IST" name="setupTest" finished-at="2025-04-11T17:23:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.Interact_with_Template_Management_Fields(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Interact_with_Template_Management_Fields(java.util.Map)[pri:5, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:03 IST" name="Interact_with_Template_Management_Fields" data-provider="TestData" finished-at="2025-04-11T17:23:13 IST" duration-ms="9601" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Category=Notification, Categoryfortemplatecreation=Promotions, CurrentStatus=Active, EditInitialStatusfortemplatemodify=Inactive, EditReason=Test, InitialStatusfortemplatecreation=Active, NotificationType=SMS, NotificationTypefortemplatecreation=EMAIL, Run=Yes, TemplateBody=Automation testing improves software quality by identifying defects early. Selenium with Java helps in UI testing, ensuring reliability and efficiency in development., TemplateNamefortemplatecreation=Test, TestScenario=AlertsTemplateManagement}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Interact_with_Template_Management_Fields -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:13 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:23:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Interact_with_Template_Management_Fields status=SUCCESS method=AlertsTemplateManagement_TestClass.Interact_with_Template_Management_Fields(java.util.Map)[pri:5, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:13 IST" name="setupTest" finished-at="2025-04-11T17:23:13 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.Clear_Input_Field_Test() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Clear_Input_Field_Test()[pri:6, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:13 IST" name="Clear_Input_Field_Test" finished-at="2025-04-11T17:23:16 IST" duration-ms="3202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Clear_Input_Field_Test -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:16 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:23:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Clear_Input_Field_Test status=SUCCESS method=AlertsTemplateManagement_TestClass.Clear_Input_Field_Test()[pri:6, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:16 IST" name="setupTest" finished-at="2025-04-11T17:23:16 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.Display_Template_Details_Table() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Display_Template_Details_Table()[pri:7, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:16 IST" name="Display_Template_Details_Table" finished-at="2025-04-11T17:23:19 IST" duration-ms="3274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Display_Template_Details_Table -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:19 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:23:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Display_Template_Details_Table status=SUCCESS method=AlertsTemplateManagement_TestClass.Display_Template_Details_Table()[pri:7, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:19 IST" name="setupTest" finished-at="2025-04-11T17:23:19 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.Test_Template_Pagination() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Test_Template_Pagination()[pri:8, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:19 IST" name="Test_Template_Pagination" finished-at="2025-04-11T17:23:28 IST" duration-ms="8703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Template_Pagination -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:28 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:23:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Template_Pagination status=SUCCESS method=AlertsTemplateManagement_TestClass.Test_Template_Pagination()[pri:8, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:28 IST" name="setupTest" finished-at="2025-04-11T17:23:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.SMS_Template_Body_Character_Limit(java.util.Map) throws java.io.IOException,java.lang.ClassNotFoundException,java.sql.SQLException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="SMS_Template_Body_Character_Limit(java.util.Map)[pri:9, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:28 IST" name="SMS_Template_Body_Character_Limit" data-provider="TestData" finished-at="2025-04-11T17:23:46 IST" duration-ms="18004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Category=Notification, Categoryfortemplatecreation=Promotions, CurrentStatus=Active, EditInitialStatusfortemplatemodify=Inactive, EditReason=Test, InitialStatusfortemplatecreation=Active, NotificationType=SMS, NotificationTypefortemplatecreation=EMAIL, Run=Yes, TemplateBody=Automation testing improves software quality by identifying defects early. Selenium with Java helps in UI testing, ensuring reliability and efficiency in development., TemplateNamefortemplatecreation=Test, TestScenario=AlertsTemplateManagement}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SMS_Template_Body_Character_Limit -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:46 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:23:46 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SMS_Template_Body_Character_Limit status=SUCCESS method=AlertsTemplateManagement_TestClass.SMS_Template_Body_Character_Limit(java.util.Map)[pri:9, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:46 IST" name="setupTest" finished-at="2025-04-11T17:23:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.Additional_Fields_for_Email_or_Notice(java.util.Map) throws java.io.IOException,java.lang.ClassNotFoundException,java.sql.SQLException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Additional_Fields_for_Email_or_Notice(java.util.Map)[pri:10, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:46 IST" name="Additional_Fields_for_Email_or_Notice" data-provider="TestData" finished-at="2025-04-11T17:23:51 IST" duration-ms="4379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Category=Notification, Categoryfortemplatecreation=Promotions, CurrentStatus=Active, EditInitialStatusfortemplatemodify=Inactive, EditReason=Test, InitialStatusfortemplatecreation=Active, NotificationType=SMS, NotificationTypefortemplatecreation=EMAIL, Run=Yes, TemplateBody=Automation testing improves software quality by identifying defects early. Selenium with Java helps in UI testing, ensuring reliability and efficiency in development., TemplateNamefortemplatecreation=Test, TestScenario=AlertsTemplateManagement}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Additional_Fields_for_Email_or_Notice -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:51 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:23:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Additional_Fields_for_Email_or_Notice status=SUCCESS method=AlertsTemplateManagement_TestClass.Additional_Fields_for_Email_or_Notice(java.util.Map)[pri:10, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:51 IST" name="setupTest" finished-at="2025-04-11T17:23:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.Add_New_Template(java.util.Map) throws java.io.IOException,java.lang.ClassNotFoundException,java.sql.SQLException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Add_New_Template(java.util.Map)[pri:11, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:23:51 IST" name="Add_New_Template" data-provider="TestData" finished-at="2025-04-11T17:24:03 IST" duration-ms="12125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Category=Notification, Categoryfortemplatecreation=Promotions, CurrentStatus=Active, EditInitialStatusfortemplatemodify=Inactive, EditReason=Test, InitialStatusfortemplatecreation=Active, NotificationType=SMS, NotificationTypefortemplatecreation=EMAIL, Run=Yes, TemplateBody=Automation testing improves software quality by identifying defects early. Selenium with Java helps in UI testing, ensuring reliability and efficiency in development., TemplateNamefortemplatecreation=Test, TestScenario=AlertsTemplateManagement}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_New_Template -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:24:03 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:24:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Add_New_Template status=SUCCESS method=AlertsTemplateManagement_TestClass.Add_New_Template(java.util.Map)[pri:11, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:24:03 IST" name="setupTest" finished-at="2025-04-11T17:24:03 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.Save_New_Template() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Save_New_Template()[pri:12, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:24:03 IST" name="Save_New_Template" finished-at="2025-04-11T17:24:08 IST" duration-ms="4938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Save_New_Template -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:24:08 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:24:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Save_New_Template status=SUCCESS method=AlertsTemplateManagement_TestClass.Save_New_Template()[pri:12, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:24:08 IST" name="setupTest" finished-at="2025-04-11T17:24:08 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.View_Template_Details() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="View_Template_Details()[pri:13, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:24:08 IST" name="View_Template_Details" finished-at="2025-04-11T17:24:14 IST" duration-ms="6259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- View_Template_Details -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:24:14 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:24:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=View_Template_Details status=SUCCESS method=AlertsTemplateManagement_TestClass.View_Template_Details()[pri:13, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:24:14 IST" name="setupTest" finished-at="2025-04-11T17:24:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.Edit_Existing_Template(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Edit_Existing_Template(java.util.Map)[pri:14, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:24:14 IST" name="Edit_Existing_Template" data-provider="TestData" finished-at="2025-04-11T17:24:53 IST" duration-ms="38836" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Category=Notification, Categoryfortemplatecreation=Promotions, CurrentStatus=Active, EditInitialStatusfortemplatemodify=Inactive, EditReason=Test, InitialStatusfortemplatecreation=Active, NotificationType=SMS, NotificationTypefortemplatecreation=EMAIL, Run=Yes, TemplateBody=Automation testing improves software quality by identifying defects early. Selenium with Java helps in UI testing, ensuring reliability and efficiency in development., TemplateNamefortemplatecreation=Test, TestScenario=AlertsTemplateManagement}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Edit_Existing_Template -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:24:53 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:24:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Edit_Existing_Template status=SUCCESS method=AlertsTemplateManagement_TestClass.Edit_Existing_Template(java.util.Map)[pri:14, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:24:53 IST" name="setupTest" finished-at="2025-04-11T17:24:53 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsTemplateManagement_TestClass.View_Template_History() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="View_Template_History()[pri:15, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:24:53 IST" name="View_Template_History" finished-at="2025-04-11T17:25:02 IST" duration-ms="9173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- View_Template_History -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:25:02 IST" name="takeScreenshotOnFailure" finished-at="2025-04-11T17:25:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=View_Template_History status=SUCCESS method=AlertsTemplateManagement_TestClass.View_Template_History()[pri:15, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="afterEachTest()[pri:0, instance:core.AlertsandNotifications.AlertsTemplateManagement_TestClass@1c1bbc4e]" started-at="2025-04-11T17:25:02 IST" name="afterEachTest" finished-at="2025-04-11T17:25:03 IST" duration-ms="834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
      </class> <!-- core.AlertsandNotifications.AlertsTemplateManagement_TestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
