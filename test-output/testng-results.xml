<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="31" passed="31" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-07T20:30:10 IST" name="Default suite" finished-at="2025-01-07T20:37:15 IST" duration-ms="425291">
    <groups>
    </groups>
    <test started-at="2025-01-07T20:30:10 IST" name="Default test" finished-at="2025-01-07T20:37:15 IST" duration-ms="425291">
      <class name="com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule">
        <test-method is-config="true" signature="SetUp()[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:29:21 IST" name="SetUp" finished-at="2025-01-07T20:30:10 IST" duration-ms="48616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:10 IST" name="setupTest" finished-at="2025-01-07T20:30:10 IST" duration-ms="105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Login_to_call_centre_application_and_take_account_filtration_page() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Login_to_call_centre_application_and_take_account_filtration_page()[pri:1, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:10 IST" name="Login_to_call_centre_application_and_take_account_filtration_page" finished-at="2025-01-07T20:30:20 IST" duration-ms="9999" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login_to_call_centre_application_and_take_account_filtration_page -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:20 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:30:20 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login_to_call_centre_application_and_take_account_filtration_page status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Login_to_call_centre_application_and_take_account_filtration_page()[pri:1, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:20 IST" name="setupTest" finished-at="2025-01-07T20:30:20 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Allocated_To_dropdown_mandatory_checking() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Allocated_To_dropdown_mandatory_checking()[pri:2, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:20 IST" name="Allocated_To_dropdown_mandatory_checking" finished-at="2025-01-07T20:30:29 IST" duration-ms="8729" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Allocated_To_dropdown_mandatory_checking -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:29 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:30:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Allocated_To_dropdown_mandatory_checking status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Allocated_To_dropdown_mandatory_checking()[pri:2, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:29 IST" name="setupTest" finished-at="2025-01-07T20:30:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Asset_category_dropdown_mandatory_checking(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Asset_category_dropdown_mandatory_checking(java.util.Map)[pri:3, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:29 IST" name="Asset_category_dropdown_mandatory_checking" data-provider="TestData" finished-at="2025-01-07T20:30:38 IST" duration-ms="8756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation23, AllocationType=Auto Allocation, DownloadFile=List of Accounts - Excel, effectDate=7, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Asset_category_dropdown_mandatory_checking -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:38 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:30:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Asset_category_dropdown_mandatory_checking status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Asset_category_dropdown_mandatory_checking(java.util.Map)[pri:3, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:38 IST" name="setupTest" finished-at="2025-01-07T20:30:38 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Select_SMA_and_NPA_Categories() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Select_SMA_and_NPA_Categories()[pri:4, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:38 IST" name="Select_SMA_and_NPA_Categories" finished-at="2025-01-07T20:30:50 IST" duration-ms="12238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Select_SMA_and_NPA_Categories -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:50 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:30:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Select_SMA_and_NPA_Categories status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Select_SMA_and_NPA_Categories()[pri:4, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:50 IST" name="setupTest" finished-at="2025-01-07T20:30:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.SMA_Category_Selection() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="SMA_Category_Selection()[pri:5, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:50 IST" name="SMA_Category_Selection" finished-at="2025-01-07T20:30:54 IST" duration-ms="3560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SMA_Category_Selection -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:54 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:30:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SMA_Category_Selection status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.SMA_Category_Selection()[pri:5, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:54 IST" name="setupTest" finished-at="2025-01-07T20:30:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.NPA_Category_Selection() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="NPA_Category_Selection()[pri:6, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:54 IST" name="NPA_Category_Selection" finished-at="2025-01-07T20:30:58 IST" duration-ms="3549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NPA_Category_Selection -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:58 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:30:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NPA_Category_Selection status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.NPA_Category_Selection()[pri:6, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:58 IST" name="setupTest" finished-at="2025-01-07T20:30:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Allocation_Type_Selection__Auto(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Allocation_Type_Selection__Auto(java.util.Map)[pri:7, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:30:58 IST" name="Allocation_Type_Selection__Auto" data-provider="TestData" finished-at="2025-01-07T20:31:02 IST" duration-ms="4106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation23, AllocationType=Auto Allocation, DownloadFile=List of Accounts - Excel, effectDate=7, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Allocation_Type_Selection__Auto -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:31:02 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:31:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Allocation_Type_Selection__Auto status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Allocation_Type_Selection__Auto(java.util.Map)[pri:7, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:31:02 IST" name="setupTest" finished-at="2025-01-07T20:31:02 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Perform_Search_with_Valid_Data() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Perform_Search_with_Valid_Data()[pri:8, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:31:02 IST" name="Perform_Search_with_Valid_Data" finished-at="2025-01-07T20:31:12 IST" duration-ms="10381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Perform_Search_with_Valid_Data -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:31:12 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:31:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Perform_Search_with_Valid_Data status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Perform_Search_with_Valid_Data()[pri:8, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:31:12 IST" name="setupTest" finished-at="2025-01-07T20:31:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Login_to_beacon_fcm_core_application_Verify_Auto_Allocation_Page_Load() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Login_to_beacon_fcm_core_application_Verify_Auto_Allocation_Page_Load()[pri:9, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:31:12 IST" name="Login_to_beacon_fcm_core_application_Verify_Auto_Allocation_Page_Load" finished-at="2025-01-07T20:32:27 IST" duration-ms="74766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login_to_beacon_fcm_core_application_Verify_Auto_Allocation_Page_Load -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:32:27 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:32:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login_to_beacon_fcm_core_application_Verify_Auto_Allocation_Page_Load status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Login_to_beacon_fcm_core_application_Verify_Auto_Allocation_Page_Load()[pri:9, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:32:27 IST" name="setupTest" finished-at="2025-01-07T20:32:27 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Verify_Fields_and_Buttons_on_Auto_Allocation_Page() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Fields_and_Buttons_on_Auto_Allocation_Page()[pri:10, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:32:27 IST" name="Verify_Fields_and_Buttons_on_Auto_Allocation_Page" finished-at="2025-01-07T20:32:31 IST" duration-ms="3619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Fields_and_Buttons_on_Auto_Allocation_Page -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:32:31 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:32:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Fields_and_Buttons_on_Auto_Allocation_Page status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Verify_Fields_and_Buttons_on_Auto_Allocation_Page()[pri:10, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:32:31 IST" name="setupTest" finished-at="2025-01-07T20:32:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Enter_Allocation_Name_with_Alphabets(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Enter_Allocation_Name_with_Alphabets(java.util.Map)[pri:11, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:32:31 IST" name="Enter_Allocation_Name_with_Alphabets" data-provider="TestData" finished-at="2025-01-07T20:32:38 IST" duration-ms="7120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation23, AllocationType=Auto Allocation, DownloadFile=List of Accounts - Excel, effectDate=7, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enter_Allocation_Name_with_Alphabets -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:32:38 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:32:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enter_Allocation_Name_with_Alphabets status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Enter_Allocation_Name_with_Alphabets(java.util.Map)[pri:11, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:32:38 IST" name="setupTest" finished-at="2025-01-07T20:32:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Select_effect_Date_from_Date_Picker(java.util.Map) throws bsh.ParseException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Select_effect_Date_from_Date_Picker(java.util.Map)[pri:12, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:32:38 IST" name="Select_effect_Date_from_Date_Picker" data-provider="TestData" finished-at="2025-01-07T20:32:41 IST" duration-ms="3398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation23, AllocationType=Auto Allocation, DownloadFile=List of Accounts - Excel, effectDate=7, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Select_effect_Date_from_Date_Picker -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:32:41 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:32:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Select_effect_Date_from_Date_Picker status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Select_effect_Date_from_Date_Picker(java.util.Map)[pri:12, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:32:41 IST" name="setupTest" finished-at="2025-01-07T20:32:41 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Select_NPA_and_SMA_Category_Checkbox() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Select_NPA_and_SMA_Category_Checkbox()[pri:13, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:32:41 IST" name="Select_NPA_and_SMA_Category_Checkbox" finished-at="2025-01-07T20:33:31 IST" duration-ms="49735" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Select_NPA_and_SMA_Category_Checkbox -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:33:31 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:33:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Select_NPA_and_SMA_Category_Checkbox status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Select_NPA_and_SMA_Category_Checkbox()[pri:13, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:33:31 IST" name="setupTest" finished-at="2025-01-07T20:33:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Select_Zone_from_Dropdown(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Select_Zone_from_Dropdown(java.util.Map)[pri:14, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:33:31 IST" name="Select_Zone_from_Dropdown" data-provider="TestData" finished-at="2025-01-07T20:33:39 IST" duration-ms="8403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation23, AllocationType=Auto Allocation, DownloadFile=List of Accounts - Excel, effectDate=7, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Select_Zone_from_Dropdown -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:33:39 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:33:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Select_Zone_from_Dropdown status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Select_Zone_from_Dropdown(java.util.Map)[pri:14, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:33:39 IST" name="setupTest" finished-at="2025-01-07T20:33:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Select_Processing_Interval_from_Dropdown(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Select_Processing_Interval_from_Dropdown(java.util.Map)[pri:15, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:33:39 IST" name="Select_Processing_Interval_from_Dropdown" data-provider="TestData" finished-at="2025-01-07T20:33:48 IST" duration-ms="8448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation23, AllocationType=Auto Allocation, DownloadFile=List of Accounts - Excel, effectDate=7, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Select_Processing_Interval_from_Dropdown -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:33:48 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:33:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Select_Processing_Interval_from_Dropdown status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Select_Processing_Interval_from_Dropdown(java.util.Map)[pri:15, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:33:48 IST" name="setupTest" finished-at="2025-01-07T20:33:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Select_To_Dropdown(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Select_To_Dropdown(java.util.Map)[pri:16, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:33:48 IST" name="Select_To_Dropdown" data-provider="TestData" finished-at="2025-01-07T20:33:56 IST" duration-ms="8458" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation23, AllocationType=Auto Allocation, DownloadFile=List of Accounts - Excel, effectDate=7, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Select_To_Dropdown -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:33:56 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:33:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Select_To_Dropdown status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Select_To_Dropdown(java.util.Map)[pri:16, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:33:56 IST" name="setupTest" finished-at="2025-01-07T20:33:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Add_New_Allocation_Name(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Add_New_Allocation_Name(java.util.Map)[pri:17, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:33:56 IST" name="Add_New_Allocation_Name" data-provider="TestData" finished-at="2025-01-07T20:34:18 IST" duration-ms="21432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation23, AllocationType=Auto Allocation, DownloadFile=List of Accounts - Excel, effectDate=7, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_New_Allocation_Name -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:34:18 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:34:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Add_New_Allocation_Name status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Add_New_Allocation_Name(java.util.Map)[pri:17, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:34:18 IST" name="setupTest" finished-at="2025-01-07T20:34:18 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Verify_Allocation_Name_Status_After_Creation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Allocation_Name_Status_After_Creation()[pri:18, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:34:18 IST" name="Verify_Allocation_Name_Status_After_Creation" finished-at="2025-01-07T20:34:22 IST" duration-ms="4107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Allocation_Name_Status_After_Creation -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:34:22 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:34:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Allocation_Name_Status_After_Creation status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Verify_Allocation_Name_Status_After_Creation()[pri:18, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:34:22 IST" name="setupTest" finished-at="2025-01-07T20:34:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Deactivate_Allocation_Name() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Deactivate_Allocation_Name()[pri:19, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:34:22 IST" name="Deactivate_Allocation_Name" finished-at="2025-01-07T20:34:43 IST" duration-ms="20972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Deactivate_Allocation_Name -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:34:43 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:34:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Deactivate_Allocation_Name status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Deactivate_Allocation_Name()[pri:19, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:34:43 IST" name="setupTest" finished-at="2025-01-07T20:34:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Reactivate_Allocation_Name() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Reactivate_Allocation_Name()[pri:20, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:34:43 IST" name="Reactivate_Allocation_Name" finished-at="2025-01-07T20:34:59 IST" duration-ms="15900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Reactivate_Allocation_Name -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:34:59 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:34:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Reactivate_Allocation_Name status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Reactivate_Allocation_Name()[pri:20, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:34:59 IST" name="setupTest" finished-at="2025-01-07T20:34:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Run_Database_Package_and_Verify_Accounts_Insertion() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Run_Database_Package_and_Verify_Accounts_Insertion()[pri:21, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:34:59 IST" name="Run_Database_Package_and_Verify_Accounts_Insertion" finished-at="2025-01-07T20:35:30 IST" duration-ms="31406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Run_Database_Package_and_Verify_Accounts_Insertion -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:35:30 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:35:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Run_Database_Package_and_Verify_Accounts_Insertion status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Run_Database_Package_and_Verify_Accounts_Insertion()[pri:21, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:35:30 IST" name="setupTest" finished-at="2025-01-07T20:35:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Login_to_call_centre_application_and_take_account_filtration_pages() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Login_to_call_centre_application_and_take_account_filtration_pages()[pri:22, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:35:30 IST" name="Login_to_call_centre_application_and_take_account_filtration_pages" finished-at="2025-01-07T20:36:21 IST" duration-ms="50526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login_to_call_centre_application_and_take_account_filtration_pages -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:21 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:36:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login_to_call_centre_application_and_take_account_filtration_pages status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Login_to_call_centre_application_and_take_account_filtration_pages()[pri:22, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:21 IST" name="setupTest" finished-at="2025-01-07T20:36:21 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Select_SMA_and_NPA_Categorie() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Select_SMA_and_NPA_Categorie()[pri:23, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:21 IST" name="Select_SMA_and_NPA_Categorie" finished-at="2025-01-07T20:36:34 IST" duration-ms="12793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Select_SMA_and_NPA_Categorie -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:34 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:36:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Select_SMA_and_NPA_Categorie status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Select_SMA_and_NPA_Categorie()[pri:23, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:34 IST" name="setupTest" finished-at="2025-01-07T20:36:34 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.SMA_Category_Selections() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="SMA_Category_Selections()[pri:24, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:34 IST" name="SMA_Category_Selections" finished-at="2025-01-07T20:36:37 IST" duration-ms="3541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SMA_Category_Selections -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:37 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:36:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SMA_Category_Selections status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.SMA_Category_Selections()[pri:24, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:37 IST" name="setupTest" finished-at="2025-01-07T20:36:37 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.NPA_Category_Selections(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="NPA_Category_Selections(java.util.Map)[pri:25, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:37 IST" name="NPA_Category_Selections" data-provider="TestData" finished-at="2025-01-07T20:36:41 IST" duration-ms="4202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation23, AllocationType=Auto Allocation, DownloadFile=List of Accounts - Excel, effectDate=7, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NPA_Category_Selections -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:41 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:36:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NPA_Category_Selections status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.NPA_Category_Selections(java.util.Map)[pri:25, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:41 IST" name="setupTest" finished-at="2025-01-07T20:36:41 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Allocation_Type_Selections__Auto(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Allocation_Type_Selections__Auto(java.util.Map)[pri:26, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:41 IST" name="Allocation_Type_Selections__Auto" data-provider="TestData" finished-at="2025-01-07T20:36:46 IST" duration-ms="4144" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation23, AllocationType=Auto Allocation, DownloadFile=List of Accounts - Excel, effectDate=7, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Allocation_Type_Selections__Auto -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:46 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:36:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Allocation_Type_Selections__Auto status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Allocation_Type_Selections__Auto(java.util.Map)[pri:26, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:46 IST" name="setupTest" finished-at="2025-01-07T20:36:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Allocated_To_Selection__Call_Centre(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Allocated_To_Selection__Call_Centre(java.util.Map)[pri:27, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:46 IST" name="Allocated_To_Selection__Call_Centre" data-provider="TestData" finished-at="2025-01-07T20:36:49 IST" duration-ms="3565" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation23, AllocationType=Auto Allocation, DownloadFile=List of Accounts - Excel, effectDate=7, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Allocated_To_Selection__Call_Centre -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:49 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:36:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Allocated_To_Selection__Call_Centre status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Allocated_To_Selection__Call_Centre(java.util.Map)[pri:27, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:49 IST" name="setupTest" finished-at="2025-01-07T20:36:49 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Perform_Search_with_Valid_Datas() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Perform_Search_with_Valid_Datas()[pri:28, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:36:49 IST" name="Perform_Search_with_Valid_Datas" finished-at="2025-01-07T20:37:01 IST" duration-ms="11349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Perform_Search_with_Valid_Datas -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:37:01 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:37:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Perform_Search_with_Valid_Datas status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Perform_Search_with_Valid_Datas()[pri:28, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:37:01 IST" name="setupTest" finished-at="2025-01-07T20:37:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Verify_Total_Account_and_Amount_in_Grid() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Total_Account_and_Amount_in_Grid()[pri:29, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:37:01 IST" name="Verify_Total_Account_and_Amount_in_Grid" finished-at="2025-01-07T20:37:04 IST" duration-ms="3053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Total_Account_and_Amount_in_Grid -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:37:04 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:37:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Total_Account_and_Amount_in_Grid status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Verify_Total_Account_and_Amount_in_Grid()[pri:29, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:37:04 IST" name="setupTest" finished-at="2025-01-07T20:37:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Download_File__List_of_Accounts(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Download_File__List_of_Accounts(java.util.Map)[pri:30, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:37:04 IST" name="Download_File__List_of_Accounts" data-provider="TestData" finished-at="2025-01-07T20:37:12 IST" duration-ms="8094" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation23, AllocationType=Auto Allocation, DownloadFile=List of Accounts - Excel, effectDate=7, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Download_File__List_of_Accounts -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:37:12 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:37:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Download_File__List_of_Accounts status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Download_File__List_of_Accounts(java.util.Map)[pri:30, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:37:12 IST" name="setupTest" finished-at="2025-01-07T20:37:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule.Verify_Downloaded_File() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Downloaded_File()[pri:31, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:37:12 IST" name="Verify_Downloaded_File" finished-at="2025-01-07T20:37:15 IST" duration-ms="3188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Downloaded_File -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:37:15 IST" name="takeScreenshotOnFailure" finished-at="2025-01-07T20:37:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Downloaded_File status=SUCCESS method=AllScenarios_CallCenter_AccountFiltrationModule.Verify_Downloaded_File()[pri:31, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="afterEachTest()[pri:0, instance:com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule@544fa968]" started-at="2025-01-07T20:37:15 IST" name="afterEachTest" finished-at="2025-01-07T20:37:16 IST" duration-ms="867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
      </class> <!-- com.test.CallCenter_AccountFiltration_Module.AllScenarios_CallCenter_AccountFiltrationModule -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
