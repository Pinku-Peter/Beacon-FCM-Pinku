<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="8" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-13T12:53:36 IST" name="Default suite" finished-at="2025-03-13T12:55:58 IST" duration-ms="141836">
    <groups>
    </groups>
    <test started-at="2025-03-13T12:53:36 IST" name="Default test" finished-at="2025-03-13T12:55:58 IST" duration-ms="141836">
      <class name="core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass">
        <test-method is-config="true" signature="SetUp()[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:53:36 IST" name="SetUp" finished-at="2025-03-13T12:53:36 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:53:36 IST" name="setupTest" finished-at="2025-03-13T12:53:37 IST" duration-ms="746" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass.testInsertNewEntryAllValidFields() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="testInsertNewEntryAllValidFields()[pri:1, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:53:37 IST" name="testInsertNewEntryAllValidFields" finished-at="2025-03-13T12:53:41 IST" duration-ms="4195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInsertNewEntryAllValidFields -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:53:41 IST" name="takeScreenshotOnFailure" finished-at="2025-03-13T12:53:41 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInsertNewEntryAllValidFields status=SUCCESS method=AlertsPlaceholderManagement_TestClass.testInsertNewEntryAllValidFields()[pri:1, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:53:41 IST" name="setupTest" finished-at="2025-03-13T12:53:41 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass.Successful_Login() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Successful_Login()[pri:2, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:53:41 IST" name="Successful_Login" finished-at="2025-03-13T12:55:09 IST" duration-ms="87843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Successful_Login -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:09 IST" name="takeScreenshotOnFailure" finished-at="2025-03-13T12:55:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Successful_Login status=SUCCESS method=AlertsPlaceholderManagement_TestClass.Successful_Login()[pri:2, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:09 IST" name="setupTest" finished-at="2025-03-13T12:55:09 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass.Access_Alerts_and_Notifications() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Access_Alerts_and_Notifications()[pri:3, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:09 IST" name="Access_Alerts_and_Notifications" finished-at="2025-03-13T12:55:17 IST" duration-ms="8222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Access_Alerts_and_Notifications -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:17 IST" name="takeScreenshotOnFailure" finished-at="2025-03-13T12:55:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Access_Alerts_and_Notifications status=SUCCESS method=AlertsPlaceholderManagement_TestClass.Access_Alerts_and_Notifications()[pri:3, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:17 IST" name="setupTest" finished-at="2025-03-13T12:55:17 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass.Access_Placeholder_Management() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Access_Placeholder_Management()[pri:4, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:17 IST" name="Access_Placeholder_Management" finished-at="2025-03-13T12:55:25 IST" duration-ms="7635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Access_Placeholder_Management -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:25 IST" name="setupTest" finished-at="2025-03-13T12:55:25 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass.Pagination_Controls_Display() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:25 IST" name="takeScreenshotOnFailure" finished-at="2025-03-13T12:55:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Access_Placeholder_Management status=SUCCESS method=AlertsPlaceholderManagement_TestClass.Access_Placeholder_Management()[pri:4, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method signature="Pagination_Controls_Display()[pri:5, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:25 IST" name="Pagination_Controls_Display" finished-at="2025-03-13T12:55:33 IST" duration-ms="8124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pagination_Controls_Display -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:33 IST" name="takeScreenshotOnFailure" finished-at="2025-03-13T12:55:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pagination_Controls_Display status=SUCCESS method=AlertsPlaceholderManagement_TestClass.Pagination_Controls_Display()[pri:5, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:33 IST" name="setupTest" finished-at="2025-03-13T12:55:33 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass.Paginate_to_Next_Page() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Paginate_to_Next_Page()[pri:6, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:33 IST" name="Paginate_to_Next_Page" finished-at="2025-03-13T12:55:41 IST" duration-ms="8085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Paginate_to_Next_Page -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:41 IST" name="takeScreenshotOnFailure" finished-at="2025-03-13T12:55:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Paginate_to_Next_Page status=SUCCESS method=AlertsPlaceholderManagement_TestClass.Paginate_to_Next_Page()[pri:6, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:41 IST" name="setupTest" finished-at="2025-03-13T12:55:41 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass.Paginate_to_Previous_Page() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Paginate_to_Previous_Page()[pri:7, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:41 IST" name="Paginate_to_Previous_Page" finished-at="2025-03-13T12:55:49 IST" duration-ms="7981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Paginate_to_Previous_Page -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:49 IST" name="takeScreenshotOnFailure" finished-at="2025-03-13T12:55:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Paginate_to_Previous_Page status=SUCCESS method=AlertsPlaceholderManagement_TestClass.Paginate_to_Previous_Page()[pri:7, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:49 IST" name="setupTest" finished-at="2025-03-13T12:55:49 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass.Search_Placeholder() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Search_Placeholder()[pri:8, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:49 IST" name="Search_Placeholder" finished-at="2025-03-13T12:55:58 IST" duration-ms="8857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_Placeholder -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:58 IST" name="takeScreenshotOnFailure" finished-at="2025-03-13T12:55:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Search_Placeholder status=SUCCESS method=AlertsPlaceholderManagement_TestClass.Search_Placeholder()[pri:8, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="afterEachTest()[pri:0, instance:core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass@1c1bbc4e]" started-at="2025-03-13T12:55:58 IST" name="afterEachTest" finished-at="2025-03-13T12:55:59 IST" duration-ms="987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
      </class> <!-- core.AlertsandNotifications.AlertsPlaceholderManagement_TestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
