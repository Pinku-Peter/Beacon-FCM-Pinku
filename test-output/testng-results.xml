<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="36" passed="36" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-27T21:13:27 IST" name="Default suite" finished-at="2025-01-27T21:22:47 IST" duration-ms="560728">
    <groups>
    </groups>
    <test started-at="2025-01-27T21:13:27 IST" name="Default test" finished-at="2025-01-27T21:22:47 IST" duration-ms="560728">
      <class name="com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule">
        <test-method is-config="true" signature="SetUp()[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:12:39 IST" name="SetUp" finished-at="2025-01-27T21:13:27 IST" duration-ms="47928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:13:27 IST" name="setupTest" finished-at="2025-01-27T21:13:27 IST" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Login_to_call_centre_application_and_take_account_filtration_page() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Login_to_call_centre_application_and_take_account_filtration_page()[pri:1, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:13:27 IST" name="Login_to_call_centre_application_and_take_account_filtration_page" finished-at="2025-01-27T21:13:36 IST" duration-ms="9292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login_to_call_centre_application_and_take_account_filtration_page -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:13:36 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:13:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login_to_call_centre_application_and_take_account_filtration_page status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Login_to_call_centre_application_and_take_account_filtration_page()[pri:1, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:13:36 IST" name="setupTest" finished-at="2025-01-27T21:13:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Allocated_To_dropdown_mandatory_checking() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Allocated_To_dropdown_mandatory_checking()[pri:2, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:13:36 IST" name="Allocated_To_dropdown_mandatory_checking" finished-at="2025-01-27T21:13:45 IST" duration-ms="8688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Allocated_To_dropdown_mandatory_checking -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:13:45 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:13:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Allocated_To_dropdown_mandatory_checking status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Allocated_To_dropdown_mandatory_checking()[pri:2, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:13:46 IST" name="setupTest" finished-at="2025-01-27T21:13:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Asset_category_dropdown_mandatory_checking(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Asset_category_dropdown_mandatory_checking(java.util.Map)[pri:3, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:13:46 IST" name="Asset_category_dropdown_mandatory_checking" data-provider="TestData" finished-at="2025-01-27T21:14:16 IST" duration-ms="30310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Asset_category_dropdown_mandatory_checking -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:16 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:14:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Asset_category_dropdown_mandatory_checking status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Asset_category_dropdown_mandatory_checking(java.util.Map)[pri:3, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:16 IST" name="setupTest" finished-at="2025-01-27T21:14:16 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Select_SMA_and_NPA_Categories() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Select_SMA_and_NPA_Categories()[pri:4, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:16 IST" name="Select_SMA_and_NPA_Categories" finished-at="2025-01-27T21:14:29 IST" duration-ms="12421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Select_SMA_and_NPA_Categories -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:29 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:14:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Select_SMA_and_NPA_Categories status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Select_SMA_and_NPA_Categories()[pri:4, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:29 IST" name="setupTest" finished-at="2025-01-27T21:14:29 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.SMA_Category_Selection() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="SMA_Category_Selection()[pri:5, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:29 IST" name="SMA_Category_Selection" finished-at="2025-01-27T21:14:32 IST" duration-ms="3603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SMA_Category_Selection -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:32 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:14:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SMA_Category_Selection status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.SMA_Category_Selection()[pri:5, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:32 IST" name="setupTest" finished-at="2025-01-27T21:14:32 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.NPA_Category_Selection() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="NPA_Category_Selection()[pri:6, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:32 IST" name="NPA_Category_Selection" finished-at="2025-01-27T21:14:36 IST" duration-ms="3605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NPA_Category_Selection -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:36 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:14:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NPA_Category_Selection status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.NPA_Category_Selection()[pri:6, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:36 IST" name="setupTest" finished-at="2025-01-27T21:14:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Allocation_Type_Selection__Auto(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Allocation_Type_Selection__Auto(java.util.Map)[pri:7, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:36 IST" name="Allocation_Type_Selection__Auto" data-provider="TestData" finished-at="2025-01-27T21:14:40 IST" duration-ms="4165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Allocation_Type_Selection__Auto -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:40 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:14:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Allocation_Type_Selection__Auto status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Allocation_Type_Selection__Auto(java.util.Map)[pri:7, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:40 IST" name="setupTest" finished-at="2025-01-27T21:14:40 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Perform_Search_with_Valid_Data() throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Perform_Search_with_Valid_Data()[pri:8, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:40 IST" name="Perform_Search_with_Valid_Data" finished-at="2025-01-27T21:14:48 IST" duration-ms="7947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Perform_Search_with_Valid_Data -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:48 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:14:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Perform_Search_with_Valid_Data status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Perform_Search_with_Valid_Data()[pri:8, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:48 IST" name="setupTest" finished-at="2025-01-27T21:14:48 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Login_to_beacon_fcm_core_application_Verify_Auto_Allocation_Page_Load() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Login_to_beacon_fcm_core_application_Verify_Auto_Allocation_Page_Load()[pri:9, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:14:48 IST" name="Login_to_beacon_fcm_core_application_Verify_Auto_Allocation_Page_Load" finished-at="2025-01-27T21:16:06 IST" duration-ms="77920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login_to_beacon_fcm_core_application_Verify_Auto_Allocation_Page_Load -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:16:06 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:16:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login_to_beacon_fcm_core_application_Verify_Auto_Allocation_Page_Load status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Login_to_beacon_fcm_core_application_Verify_Auto_Allocation_Page_Load()[pri:9, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:16:06 IST" name="setupTest" finished-at="2025-01-27T21:16:06 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Verify_Fields_and_Buttons_on_Auto_Allocation_Page() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Fields_and_Buttons_on_Auto_Allocation_Page()[pri:10, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:16:06 IST" name="Verify_Fields_and_Buttons_on_Auto_Allocation_Page" finished-at="2025-01-27T21:16:10 IST" duration-ms="3723" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Fields_and_Buttons_on_Auto_Allocation_Page -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:16:10 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:16:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Fields_and_Buttons_on_Auto_Allocation_Page status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Verify_Fields_and_Buttons_on_Auto_Allocation_Page()[pri:10, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:16:10 IST" name="setupTest" finished-at="2025-01-27T21:16:10 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Enter_Allocation_Name_with_Alphabets(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Enter_Allocation_Name_with_Alphabets(java.util.Map)[pri:11, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:16:10 IST" name="Enter_Allocation_Name_with_Alphabets" data-provider="TestData" finished-at="2025-01-27T21:16:16 IST" duration-ms="6324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enter_Allocation_Name_with_Alphabets -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:16:16 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:16:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enter_Allocation_Name_with_Alphabets status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Enter_Allocation_Name_with_Alphabets(java.util.Map)[pri:11, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:16:16 IST" name="setupTest" finished-at="2025-01-27T21:16:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Select_effect_Date_from_Date_Picker(java.util.Map) throws bsh.ParseException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Select_effect_Date_from_Date_Picker(java.util.Map)[pri:12, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:16:16 IST" name="Select_effect_Date_from_Date_Picker" data-provider="TestData" finished-at="2025-01-27T21:16:20 IST" duration-ms="3475" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Select_effect_Date_from_Date_Picker -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:16:20 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:16:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Select_effect_Date_from_Date_Picker status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Select_effect_Date_from_Date_Picker(java.util.Map)[pri:12, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:16:20 IST" name="setupTest" finished-at="2025-01-27T21:16:20 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Select_NPA_and_SMA_Category_Checkbox() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Select_NPA_and_SMA_Category_Checkbox()[pri:13, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:16:20 IST" name="Select_NPA_and_SMA_Category_Checkbox" finished-at="2025-01-27T21:17:10 IST" duration-ms="50018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Select_NPA_and_SMA_Category_Checkbox -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:10 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:17:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Select_NPA_and_SMA_Category_Checkbox status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Select_NPA_and_SMA_Category_Checkbox()[pri:13, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:10 IST" name="setupTest" finished-at="2025-01-27T21:17:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Select_Zone_from_Dropdown(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Select_Zone_from_Dropdown(java.util.Map)[pri:14, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:10 IST" name="Select_Zone_from_Dropdown" data-provider="TestData" finished-at="2025-01-27T21:17:18 IST" duration-ms="8412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Select_Zone_from_Dropdown -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:18 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:17:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Select_Zone_from_Dropdown status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Select_Zone_from_Dropdown(java.util.Map)[pri:14, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:18 IST" name="setupTest" finished-at="2025-01-27T21:17:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Select_Processing_Interval_from_Dropdown(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Select_Processing_Interval_from_Dropdown(java.util.Map)[pri:15, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:18 IST" name="Select_Processing_Interval_from_Dropdown" data-provider="TestData" finished-at="2025-01-27T21:17:27 IST" duration-ms="8454" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Select_Processing_Interval_from_Dropdown -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:27 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:17:27 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Select_Processing_Interval_from_Dropdown status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Select_Processing_Interval_from_Dropdown(java.util.Map)[pri:15, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:27 IST" name="setupTest" finished-at="2025-01-27T21:17:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Select_To_Dropdown(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Select_To_Dropdown(java.util.Map)[pri:16, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:27 IST" name="Select_To_Dropdown" data-provider="TestData" finished-at="2025-01-27T21:17:35 IST" duration-ms="8515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Select_To_Dropdown -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:35 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:17:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Select_To_Dropdown status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Select_To_Dropdown(java.util.Map)[pri:16, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:36 IST" name="setupTest" finished-at="2025-01-27T21:17:36 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Add_New_Allocation_Name(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Add_New_Allocation_Name(java.util.Map)[pri:17, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:36 IST" name="Add_New_Allocation_Name" data-provider="TestData" finished-at="2025-01-27T21:17:56 IST" duration-ms="20699" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_New_Allocation_Name -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:56 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:17:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Add_New_Allocation_Name status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Add_New_Allocation_Name(java.util.Map)[pri:17, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:56 IST" name="setupTest" finished-at="2025-01-27T21:17:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Verify_Allocation_Name_Status_After_Creation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Allocation_Name_Status_After_Creation()[pri:18, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:17:56 IST" name="Verify_Allocation_Name_Status_After_Creation" finished-at="2025-01-27T21:18:00 IST" duration-ms="4120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Allocation_Name_Status_After_Creation -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:18:00 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:18:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Allocation_Name_Status_After_Creation status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Verify_Allocation_Name_Status_After_Creation()[pri:18, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:18:00 IST" name="setupTest" finished-at="2025-01-27T21:18:00 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Deactivate_Allocation_Name() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Deactivate_Allocation_Name()[pri:19, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:18:00 IST" name="Deactivate_Allocation_Name" finished-at="2025-01-27T21:18:21 IST" duration-ms="20721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Deactivate_Allocation_Name -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:18:21 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:18:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Deactivate_Allocation_Name status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Deactivate_Allocation_Name()[pri:19, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:18:21 IST" name="setupTest" finished-at="2025-01-27T21:18:21 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Reactivate_Allocation_Name() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Reactivate_Allocation_Name()[pri:20, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:18:21 IST" name="Reactivate_Allocation_Name" finished-at="2025-01-27T21:18:42 IST" duration-ms="20766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Reactivate_Allocation_Name -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:18:42 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:18:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Reactivate_Allocation_Name status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Reactivate_Allocation_Name()[pri:20, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:18:42 IST" name="setupTest" finished-at="2025-01-27T21:18:42 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Run_Database_Package_and_Verify_Accounts_Insertion() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Run_Database_Package_and_Verify_Accounts_Insertion()[pri:21, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:18:42 IST" name="Run_Database_Package_and_Verify_Accounts_Insertion" finished-at="2025-01-27T21:20:14 IST" duration-ms="91840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Run_Database_Package_and_Verify_Accounts_Insertion -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:20:14 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:20:14 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Run_Database_Package_and_Verify_Accounts_Insertion status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Run_Database_Package_and_Verify_Accounts_Insertion()[pri:21, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:20:14 IST" name="setupTest" finished-at="2025-01-27T21:20:14 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Login_to_call_centre_application_and_take_account_filtration_pages() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Login_to_call_centre_application_and_take_account_filtration_pages()[pri:22, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:20:14 IST" name="Login_to_call_centre_application_and_take_account_filtration_pages" finished-at="2025-01-27T21:21:12 IST" duration-ms="57991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login_to_call_centre_application_and_take_account_filtration_pages -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:12 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:21:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login_to_call_centre_application_and_take_account_filtration_pages status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Login_to_call_centre_application_and_take_account_filtration_pages()[pri:22, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:12 IST" name="setupTest" finished-at="2025-01-27T21:21:12 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Select_SMA_and_NPA_Categorie() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Select_SMA_and_NPA_Categorie()[pri:23, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:12 IST" name="Select_SMA_and_NPA_Categorie" finished-at="2025-01-27T21:21:25 IST" duration-ms="13314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Select_SMA_and_NPA_Categorie -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:25 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:21:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Select_SMA_and_NPA_Categorie status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Select_SMA_and_NPA_Categorie()[pri:23, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:25 IST" name="setupTest" finished-at="2025-01-27T21:21:25 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.SMA_Category_Selections() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="SMA_Category_Selections()[pri:24, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:25 IST" name="SMA_Category_Selections" finished-at="2025-01-27T21:21:29 IST" duration-ms="3573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SMA_Category_Selections -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:29 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:21:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SMA_Category_Selections status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.SMA_Category_Selections()[pri:24, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:29 IST" name="setupTest" finished-at="2025-01-27T21:21:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.NPA_Category_Selections(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="NPA_Category_Selections(java.util.Map)[pri:25, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:29 IST" name="NPA_Category_Selections" data-provider="TestData" finished-at="2025-01-27T21:21:33 IST" duration-ms="4310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NPA_Category_Selections -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:33 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:21:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NPA_Category_Selections status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.NPA_Category_Selections(java.util.Map)[pri:25, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:33 IST" name="setupTest" finished-at="2025-01-27T21:21:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Allocation_Type_Selections__Auto(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Allocation_Type_Selections__Auto(java.util.Map)[pri:26, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:33 IST" name="Allocation_Type_Selections__Auto" data-provider="TestData" finished-at="2025-01-27T21:21:37 IST" duration-ms="4245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Allocation_Type_Selections__Auto -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:37 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:21:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Allocation_Type_Selections__Auto status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Allocation_Type_Selections__Auto(java.util.Map)[pri:26, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:37 IST" name="setupTest" finished-at="2025-01-27T21:21:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Allocated_To_Selection__Call_Centre(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Allocated_To_Selection__Call_Centre(java.util.Map)[pri:27, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:37 IST" name="Allocated_To_Selection__Call_Centre" data-provider="TestData" finished-at="2025-01-27T21:21:41 IST" duration-ms="3665" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Allocated_To_Selection__Call_Centre -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:41 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:21:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Allocated_To_Selection__Call_Centre status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Allocated_To_Selection__Call_Centre(java.util.Map)[pri:27, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:41 IST" name="setupTest" finished-at="2025-01-27T21:21:41 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Perform_Search_with_Valid_Datas() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Perform_Search_with_Valid_Datas()[pri:28, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:41 IST" name="Perform_Search_with_Valid_Datas" finished-at="2025-01-27T21:21:54 IST" duration-ms="12537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Perform_Search_with_Valid_Datas -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:54 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:21:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Perform_Search_with_Valid_Datas status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Perform_Search_with_Valid_Datas()[pri:28, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:54 IST" name="setupTest" finished-at="2025-01-27T21:21:54 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Verify_Total_Account_and_Amount_in_Grid() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Total_Account_and_Amount_in_Grid()[pri:29, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:54 IST" name="Verify_Total_Account_and_Amount_in_Grid" finished-at="2025-01-27T21:21:57 IST" duration-ms="3090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Total_Account_and_Amount_in_Grid -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:57 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:21:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Total_Account_and_Amount_in_Grid status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Verify_Total_Account_and_Amount_in_Grid()[pri:29, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:57 IST" name="setupTest" finished-at="2025-01-27T21:21:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Download_File__List_of_Accounts(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Download_File__List_of_Accounts(java.util.Map)[pri:30, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:21:57 IST" name="Download_File__List_of_Accounts" data-provider="TestData" finished-at="2025-01-27T21:22:07 IST" duration-ms="9853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Download_File__List_of_Accounts -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:07 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:22:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Download_File__List_of_Accounts status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Download_File__List_of_Accounts(java.util.Map)[pri:30, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:07 IST" name="setupTest" finished-at="2025-01-27T21:22:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Verify_Downloaded_File() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Downloaded_File()[pri:31, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:07 IST" name="Verify_Downloaded_File" finished-at="2025-01-27T21:22:10 IST" duration-ms="3346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Downloaded_File -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:10 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:22:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Downloaded_File status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Verify_Downloaded_File()[pri:31, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:10 IST" name="setupTest" finished-at="2025-01-27T21:22:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Download_Dialer_File(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Download_Dialer_File(java.util.Map)[pri:32, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:10 IST" name="Download_Dialer_File" data-provider="TestData" finished-at="2025-01-27T21:22:20 IST" duration-ms="9628" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Download_Dialer_File -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:20 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:22:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Download_Dialer_File status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Download_Dialer_File(java.util.Map)[pri:32, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:20 IST" name="setupTest" finished-at="2025-01-27T21:22:20 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Verify_Dialer_Downloaded_File() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Dialer_Downloaded_File()[pri:33, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:20 IST" name="Verify_Dialer_Downloaded_File" finished-at="2025-01-27T21:22:23 IST" duration-ms="3110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Dialer_Downloaded_File -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:23 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:22:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Dialer_Downloaded_File status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Verify_Dialer_Downloaded_File()[pri:33, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:23 IST" name="setupTest" finished-at="2025-01-27T21:22:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Download_Invalid_MobileNo_Excel_File(java.util.Map) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Download_Invalid_MobileNo_Excel_File(java.util.Map)[pri:34, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:23 IST" name="Download_Invalid_MobileNo_Excel_File" data-provider="TestData" finished-at="2025-01-27T21:22:34 IST" duration-ms="11255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Download_Invalid_MobileNo_Excel_File -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:34 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:22:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Download_Invalid_MobileNo_Excel_File status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Download_Invalid_MobileNo_Excel_File(java.util.Map)[pri:34, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:34 IST" name="setupTest" finished-at="2025-01-27T21:22:34 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Verify_Invalid_Mobile_Number_Downloaded_File() throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Invalid_Mobile_Number_Downloaded_File()[pri:35, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:34 IST" name="Verify_Invalid_Mobile_Number_Downloaded_File" finished-at="2025-01-27T21:22:37 IST" duration-ms="3088" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Invalid_Mobile_Number_Downloaded_File -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:37 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:22:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Invalid_Mobile_Number_Downloaded_File status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Verify_Invalid_Mobile_Number_Downloaded_File()[pri:35, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="setupTest(java.lang.reflect.Method)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:37 IST" name="setupTest" finished-at="2025-01-27T21:22:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule.Verify_Download_History(java.util.Map) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="Verify_Download_History(java.util.Map)[pri:36, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:37 IST" name="Verify_Download_History" data-provider="TestData" finished-at="2025-01-27T21:22:47 IST" duration-ms="10090" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{AllocatedTo=Call Centre, AllocationName=TestAllocation51, AllocationType=Auto Allocation, DialerFile=Dialer File - Excel, DownloadFile=List of Accounts - Excel, effectDate=27, InvalidMobileNoExcel=Invalid Mobile No - Excel, MobileNumber=A1299G465C, OutstandingBalance=12345, OutstandingBalanceOperator==, ProcessingInterval=Daily, Run=Yes, TestScenario=Call_Centre_Auto_Allocation, To=Call Centre, Zone=Mumbai}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Download_History -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:47 IST" name="takeScreenshotOnFailure" finished-at="2025-01-27T21:22:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Download_History status=SUCCESS method=AllScenarios_CoreAutoAllocationModule.Verify_Download_History(java.util.Map)[pri:36, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="afterEachTest()[pri:0, instance:com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule@4b8729ff]" started-at="2025-01-27T21:22:48 IST" name="afterEachTest" finished-at="2025-01-27T21:22:50 IST" duration-ms="2689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
      </class> <!-- com.test.CoreAutoAllocation_Module.AllScenarios_CoreAutoAllocationModule -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
